* Python Extension
** /strategy/
   Provides module /libstrategy/.
*** Symbols
**** globals
     From /PyWrapper.h/:
     * getInstrHash
     * getStgHash
     * getInstrumentInfo
     
     From /CTradeBaseInfo.h/:
     * exchangeint2str
     
     From /BarMaker.cpp/
     * getDailyCycle
     * getSessionCycle
      
     From /CTradeBaseInfo.h/, static member functions
     * getInstrumentInfoByHash
     * getTradingDay
     * setTradingDay
     * setTradeBaseInitFlag
     * addInstrInfo
     * clearInstrInfo
     * callSysOnSwitchDayCb
     
     From /RiskError.h/
     * strError
      
     From /FastLogger.h/
     * getNewLogger
     * fastLog
     * getStgLoggerId
     * initFastLoggerConf

     From /utils.h/
     * getEmOrderRtnTypeString

     From /StrategyShared.h/
     * getStrategyConfig

     From /CStrategyProcess.cpp/
     * getCurMdTime
 
**** class
      
       From /include/ATStructure.h/
     * Tick ::  UnitedMarketData
     * CBar ::  Bar
     * LastTick ::  tLastTick
     * OrderTrack ::  tOrderTrack
     * RtnMsg ::  tRtnMsg
     * InstrumentInfo :: tInstrumentInfo
      
       From /md/
     * IMDHelper :: IMDHelper
     * MDHelperComm :: CMDHelperCommWrapper, from CMDHelperComm
     * MDHelperReplayIO :: CMDHelperReplayIOWrapper, from CMDHelperReplayIO
      
       From /td/
     * ITDHelper :: ITDHelper
     * TDHelperComm :: CTDHelperComm
     * TDHelperFake :: CTDHelperFake
      
       From /strategy/
     * SimpleStrategyBase :: CStrategy
     * SimpleStrategy :: CPyStrategy, from CStrategy
     * StrategyBase :: CPyStrategyBase, from CStrategyBase
     * StrategyProcess :: CStrategyProcess
       
       From /account/
     * UnitVol :: UnitVol
     * UnitAmt :: UnitAmt
     * UnitPx :: UnitPx
     * UnitPnl :: UnitPnl
     * ModAcc :: ModAcc
     * ModInstr :: ModInstr
     * ModPrd :: ModPrd
     * AccBase :: AccBaseWrapper, from AccBase
       
       From /risk/
     * RiskStg :: RiskStgWrapper, from RiskStg
       
       From /common/
     * WareHouseReader :: CPyWareHouseReader, from CWareHouseReader
     
       From /io/
     * RtnReader :: CPyRtnReader, wrapping CRawIOReader
     * SignalReader :: CSignalReader
     * SignalWriter :: CSignalWriter
       
**** enum
     
     From /include/ATConstants.h/
     * Offset ::  emOffset
     * OrderRtnType ::  emOrderRtnType
     * Dir :: emDir
       
** /execute_model/ or /tdlib/
*** The two packages are two alternate implementation of /libexecstg.so/.
*** The differences come from 
   * /execute_model/ has differenct implementation of Python binding, like *CExecuteStrategy*.
   * /execute_model/ also provides for detailed implementation of model, like *CLossModel*
   * /execute_model/ has more sophisticated logging using /FastLog/
   * /execute_model/ has more modulized configuration methods
     
*** Symbols
    From /execute_model/
   * ExecStrategyBase :: CPyExecuteStrategy, from CExecuteStrategy
     
** /logdb/
   Two modules provided:
   * /testpython/
   * /LogDB/
     
** /io/ 
   Provides module /pymemipc/ from unused sources in /io/
   
* Python Embedding
** /td/
*** /CTDHelperPython/, through /PyExtExch/
*** Integrated in /libstrategy.so/
** /md/
*** /CMDHelperPython/, through /PyExtExch/
*** Integrated in /libstrategy.so/
** /TunnelAgent/
*** Binary target: /PyLoader/
